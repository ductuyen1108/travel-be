/* DO NOT EDIT, file generated by nestjs-i18n */

import { Path } from "nestjs-i18n";
export type I18nTranslations = {
    "add-point-code": {
        "overNumberCodeInMonth": string;
        "fileNotDownloaded": string;
        "systemConflict": string;
        "unBLockScanCodeDupConflict": string;
    };
    "auth": {
        "common": {
            "deleteMultipleError": string;
            "wrongOldPassword": string;
            "invalidEmail": string;
            "invalidUser": string;
            "invalidToken": string;
            "expiredToken": string;
            "wrongVerifyCode": string;
            "wrongPassword": string;
            "invalidPassword": string;
            "featureIsTurnOff": string;
        };
        "customer": {
            "wrongPhoneNumber": string;
            "wrongPassword": string;
            "failPhoneNumber": string;
            "failPassword": string;
            "phoneNumberNotFound": string;
            "customerNotFound": string;
            "blockedAccount": string;
            "unBlockAccount": string;
            "blockedAddPoint": string;
            "unBlockedAddPoint": string;
            "existed": string;
            "wrongOldPassword": string;
        };
        "admin": {
            "invalidEmail": string;
            "wrongPassword": string;
            "failUserName": string;
            "adminNotFound": string;
        };
        "offForgetPassword": string;
        "onThresholdSendOtp": string;
        "blockedLogin": string;
    };
    "cart": {
        "invalidProduct": string;
        "productVariantIsNotBelongToOneProduct": string;
        "productOutOfStock": string;
        "invalidProductToVariantIds": string;
        "productToVariantsNotBelongsToOneProduct": string;
    };
    "category": {
        "cannotBeDeleted": string;
    };
    "common": {
        "word": {
            "name": string;
            "notFound": string;
            "birthDate": string;
            "firebaseIdToken": string;
            "invalid": string;
            "paswsord": string;
            "downloadFileHistory": string;
            "fileRequest": string;
            "systemConfigPoint": string;
            "admin": string;
            "customer": string;
            "user": string;
            "event": string;
            "requestExport": string;
            "file": string;
            "requestImport": string;
            "survey": string;
            "secret": string;
            "systemConfig": string;
            "termsPolicy": string;
            "phoneNumber": string;
            "deviceToken": string;
            "email": string;
            "address": string;
            "imageId": string;
            "newPassword": string;
            "appConfig": string;
            "subject": string;
            "subjectDetail": string;
            "news": string;
            "newsDetail": string;
            "newsToSubject": string;
            "newsToFile": string;
            "appPolicy": string;
            "appPolicyDetail": string;
            "contact": string;
            "referralCode": string;
            "password": string;
            "addPointCode": string;
            "customerToken": string;
            "blockedHistory": string;
            "tierConfig": string;
            "serviceInfo": string;
        };
        "exc": {
            "badRequest": string;
            "notFound": string;
            "internalServerError": string;
            "forbidden": string;
            "unauthorized": string;
            "conflict": string;
            "expectationFailed": string;
            "serviceUnavailable": string;
        };
        "validationError": {
            "appCode": string;
            "date": string;
            "required": string;
            "merchantId": string;
        };
        "cannotDeleteItemIsDefaultLang": string;
    };
    "contact": {
        "isExisted": string;
    };
    "credit": {
        "notSupportedNotRootMerchant": string;
    };
    "event": {
        "invalidEventGift": string;
        "deleteMultipleError": string;
        "notFound": string;
        "invalidSystemConfigPoint": string;
    };
    "evoucher-info": {
        "invalidDeletedIds": string;
        "cannotDeleteThirdPartyEvoucher": string;
        "cannotDeleteUsedEvoucher": string;
    };
    "feedback": {
        "existsFeedbackContent": string;
    };
    "game": {
        "productVariantNotFound": string;
        "productVariantNotLinkWithVoucher": string;
        "invalidProvince": string;
        "gameNotFound": string;
        "gameGiftNotFound": string;
        "cannotDeleteGameAlreadyHasWinner": string;
        "cannotDeleteGameGiftAlreadyHasWinner": string;
        "conflictGameType": string;
        "invalidGameTypeIds": string;
        "gameTypeNotFound": string;
        "cannotDeleteGameTypeHasBeenUsed": string;
        "invalidGameGiftConstraints": string;
        "invalidGameGiftProvinceConstraints": string;
        "invalidGameGiftAllocationConstraints": string;
        "invalidGameIds": string;
        "gameConfigPlayTimeNotFound": string;
        "invalidGameConfigPlayTimeIds": string;
        "notEnoughGamePlayTime": string;
        "userNotSelectProvince": string;
        "gameInvalid": string;
        "gameGiftConstraintTypeInvalid": string;
        "invalidProduct": string;
        "invalidProductVariant": string;
        "gameNotHaveNotWonGift": string;
        "winRateMoreThan100": string;
    };
    "loyalty-code": {
        "expiredOrInactive": string;
        "invalidExpiredDate": string;
        "codeGroupExisted": string;
        "productGiftNotEnough": string;
    };
    "news": {
        "isExisted": string;
        "titleIsExisted": string;
        "notFoundNewsDetail": string;
    };
    "noti": {
        "common": {
            "notiNotFound": string;
            "deleteMultipleError": string;
            "featureIsTurnOff": string;
        };
        "canNotDeleteNotiSent": string;
        "notiConditionConflict": string;
        "notiOperatorConflict": string;
        "cannotDeleteInUseNotiDisplayTemplate": string;
        "cannotDeleteOtherNotiDisplayTemplate": string;
        "cannotDeleteInUseNotiCampaignConfigRule": string;
        "cannotDeleteDefaultNotiDisplayTemplate": string;
        "cannotDeleteInUseNotiTemplate": string;
        "invalidNotiConfigValueData": string;
        "znsParamValidationFailed": string;
        "cannotDeleteNotiCampaignConditionInUsed": string;
        "cannotDeleteNotiCampaignOperatorInUsed": string;
        "cannotDeleteZnsTemplateInUsed": string;
        "merchantNotConfigBrandNameCannotUseZns": string;
    };
    "order": {
        "addOrderShipping": {
            "overOrderShipping": string;
            "addressIsOnlyOne": string;
            "orderShippingNotFound": string;
        };
        "featureIsTurnOff": string;
        "cartNotFound": string;
        "productNotFound": string;
        "invalidProduct": string;
        "productOutOfStock": string;
        "missingOrderShippingInfo": string;
        "notEnoughPoint": string;
        "paymentPriceUnimplemented": string;
        "missingPhoneNumber": string;
        "voucherUsed": string;
        "cannotRefundOrder": string;
        "invalidRefundPoint": string;
        "provinceNotFound": string;
        "districtNotFound": string;
        "wardNotFound": string;
        "districtNotMatchParent": string;
        "wardNotMatchParent": string;
        "provinceTypeIsNotProvince": string;
        "provinceTypeIsNotDistrict": string;
        "provinceTypeIsNotWard": string;
        "customerShippingNotFound": string;
        "cannotDeleteLastCustomerShipping": string;
        "requestedRefundOrder": string;
        "refundedOrder": string;
        "cannotRejectRefundOrder": string;
        "refundVoucherUnimplemented": string;
        "storingExpiredUserEvoucher": string;
        "userEvoucherNotFound": string;
        "userEvoucherInvalid": string;
    };
    "outbox-message": {
        "outboxMessageNotFailed": string;
    };
    "point": {
        "addPoint": {
            "invalidCode": string;
            "usedCode": string;
            "expiredCode": string;
            "blockedUser": string;
            "blockedAddPoint": string;
            "overAddPointInDay": string;
        };
        "featureIsTurnOff": string;
    };
    "product": {
        "common": {
            "groupAndBundleProductIsNotImplemented": string;
            "productNotFound": string;
            "productVariantNotFound": string;
            "productAttributeNotFound": string;
            "productThumbnailNotFound": string;
            "deleteMultipleError": string;
            "invalidProductVariantImages": string;
            "invalidDefaultProductVariant": string;
            "invalidCategories": string;
            "invalidTags": string;
            "invalidProductVariants": string;
            "invalidProductVariantWithSimpleProduct": string;
            "invalidProductVariantWithVirtualProduct": string;
            "productTransportInfoNotFound": string;
        };
        "validationError": {
            "id": string;
            "sku": string;
            "quantity": string;
            "imageIds": string;
            "productAttributeTermIds": string;
            "price": string;
            "salePrice": string;
            "point": string;
            "salePoint": string;
            "name": string;
            "width": string;
            "height": string;
            "_length": string;
            "weight": string;
            "lang": string;
            "description": string;
            "shortDescription": string;
            "slug": string;
            "type": string;
            "status": string;
            "isFeature": string;
            "onSale": string;
            "thumbnailId": string;
            "tagIds": string;
            "categoryIds": string;
            "productVariantIds": string;
            "defaultProductVariantId": string;
            "productDetails": string;
            "searchType": string;
            "searchText": string;
            "taxStatus": string;
            "productType": string;
            "productStatus": string;
            "sortType": string;
            "sortField": string;
            "attributeTermIds": string;
            "minPoint": string;
            "maxPoint": string;
            "numberOfProductPerCategory": string;
            "minPrice": string;
            "maxPrice": string;
        };
        "productCannotBeDeleted": string;
        "productVariantCannotBeDeleted": string;
        "productAttributeCannotBeDeleted": string;
        "productAttributeTermCannotBeDeleted": string;
        "cannotDeleteProductVariantOfProduct": string;
        "cannotUpdateFieldProductVariant": string;
        "configurableProductCannotHaveMixVarianType": string;
        "affiliateProductIsReadOnly": string;
        "productAffiliateCanHaveOnly1Variant": string;
        "productAffiliateCanHaveOnlyAffiliateVariant": string;
    };
    "referral": {
        "referrerNotFound": string;
        "referrerExisted": string;
        "invalidFrom": string;
        "invalidTo": string;
        "invalidName": string;
        "invalidPhoneNumber": string;
        "invalidCode": string;
        "invalidAddress": string;
        "invalidStatus": string;
        "invalidReferralCode": string;
        "invalidId": string;
        "fileTypeInvalid": string;
        "referralYourSelf": string;
        "conflictCodeOrReferral": string;
        "featureIsTurnOff": string;
        "referrerHadInvitedUser": string;
    };
    "store": {
        "storeNotFound": string;
        "fileTypeInvalid": string;
    };
    "subject": {
        "isExisted": string;
        "notFoundSubjectDetail": string;
    };
    "survey": {
        "notFound": string;
        "simpleQuestionOnlyAcceptOneAnswer": string;
        "notAnswerEnoughQuestion": string;
        "surveyIsAlreadyTaken": string;
        "featureIsTurnOff": string;
        "answerNotFound": string;
        "canNotUpdateSurveyPointIfAlreadyTaken": string;
    };
    "system-config": {
        "common": {
            "systemConfigNotFound": string;
            "invalidTitle": string;
            "invalidStatus": string;
            "invalidLink": string;
            "invalidDesc": string;
            "invalidImage": string;
            "invalidImageId": string;
            "invalidId": string;
            "invalidStartDate": string;
            "invalidEndDate": string;
            "invalidName": string;
            "invalidMaxLength": string;
            "invalidOrdinal": string;
        };
        "popupConfig": {
            "popupConfigNotFound": string;
            "popupConfigItemNotFound": string;
            "popupConfigOrdinalAlready": string;
        };
        "featureConfig": {
            "featureConfigNotFound": string;
            "featureConfigItemNotFound": string;
            "popupConfigItemNotFound": string;
        };
        "ruleConfig": {
            "ruleConfigNotFound": string;
            "ruleConfigItemNotFound": string;
        };
        "eventConfig": {
            "eventConfigNotFound": string;
            "eventConfigItemNotFound": string;
        };
        "homeConfig": {
            "common": {
                "invalidData": string;
                "homeConfigNotFound": string;
            };
        };
        "shareAppConfig": {
            "common": {
                "invalidData": string;
                "shareAppConfigNotFound": string;
            };
        };
        "appPolicy": {
            "reachLimitAppPolicyAmount": string;
        };
    };
    "tag": {
        "cannotBeDeleted": string;
        "attachedTagCannotBeUpdated": string;
        "tagIds": string;
        "invalidTagType": string;
        "typeCannotBeUpdated": string;
    };
    "terms-policy": {
        "common": {
            "termsPolicyNotFound": string;
            "termsPolicyVariantNotFound": string;
            "termsPolicyAttributeNotFound": string;
            "termsPolicyThumbnailNotFound": string;
            "externalTermsPolicyNotFound": string;
            "deleteMultipleError": string;
        };
        "validationError": {
            "id": string;
            "name": string;
            "lang": string;
            "content": string;
            "type": string;
            "status": string;
            "termsPolicyDetails": string;
        };
    };
    "test": {
        "plain": string;
        "params": string;
    };
    "token": {
        "otpLimitReach": string;
        "invalidOtpType": string;
        "otpExpires": string;
        "incorrectOtp": string;
    };
};
export type I18nPath = Path<I18nTranslations>;
